{
	"name": "dataflow1_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Employee_DS",
						"type": "DatasetReference"
					},
					"name": "Employee"
				},
				{
					"dataset": {
						"referenceName": "Department_DS",
						"type": "DatasetReference"
					},
					"name": "Department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "EmployeeDept_Output_DS",
						"type": "DatasetReference"
					},
					"name": "SinkEmpDept"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          E_ID as string,",
				"          E_NAME as string,",
				"          D_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employee",
				"source(output(",
				"          D_ID as string,",
				"          D_NAME as string,",
				"          D_HEAD as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Department",
				"Employee, Department join(Employee@D_ID == Department@D_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 filter(D_NAME == 'CSE') ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['CSEDepartment'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          E_ID,",
				"          E_NAME,",
				"          D_ID = Employee@D_ID,",
				"          Dept_NAME = D_NAME,",
				"          Dept_HEAD = D_HEAD",
				"     ),",
				"     partitionBy('hash', 1)) ~> SinkEmpDept"
			]
		}
	}
}